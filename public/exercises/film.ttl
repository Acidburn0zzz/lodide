@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix rdfa: <http://www.w3.org/ns/rdfa#>.
@prefix xhv: <http://www.w3.org/1999/xhtml/vocab#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix r2h: <http://rdf2h.github.io/2015/rdf2h#>.
@prefix s: <http://schema.org/>.
@prefix lodide: <http://ontology.lodide.io/>.
@prefix dc: <http://purl.org/dc/elements/1.1/>.
@prefix schema: <http://schema.org/>.

<> a lodide:Exercise;
    lodide:intro "<h2>Italian films in DBpedia</h2>\n            <p>In this example you see how to write a SPARQL query to get film titles from DBpedia.</p>";
    lodide:finalWords "<ul>\n                    <li>Press the \"Run my code\"-button to verify your triple.</li>\n                </ul>";
    lodide:dataSource [
        lodide:taskSolutionType lodide:sparqlSource;
        lodide:taskDescription """Write a SPARQL query CONSTRUCT to display ten film titles produced in Italy, using DBpedia SPARQL endpoint.""";
        lodide:taskSolutionResource "http://dbpedia.org/sparql";
        lodide:taskSolutionCode """
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
CONSTRUCT { ?movie rdfs:label ?label }
WHERE {
  ?movie a <http://dbpedia.org/ontology/Film> .
  ?movie <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .
  ?movie rdfs:label ?label .
  FILTER (lang(?label) = 'en')
} LIMIT 10""";
    ].
<> lodide:dataProcessing [
    lodide:taskDescription """In this exercise nothing needs to be done here. But studying the code below isn't a bad idea.
                              The code read the triples from the CONSTRUCT SPARQL query, and print an array of titles.""";
    lodide:taskSolutionCodeCurrent "var triples = g.toArray();\nvar labels = [];\nfor (k in triples) {\n    labels.push(triples[k].object);\n}\nalert(labels);"
].
